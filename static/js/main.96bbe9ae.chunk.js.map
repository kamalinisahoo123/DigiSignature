{"version":3,"sources":["components/swatch.js","App.js","reportWebVitals.js","index.js"],"names":["Swatch","setToolType","className","title","onClick","gen","rough","generator","createElement","id","x1","y1","x2","y2","roughEle","line","midPointBtw","p1","p2","x","y","App","useState","elements","setElements","isDrawing","setIsDrawing","points","setPoints","path","setPath","action","setAction","toolType","selectedElement","setSelectedElement","useEffect","canvas","document","getElementById","context","getContext","lineCap","lineJoin","save","roughCanvas","undefined","forEach","stroke","index","beginPath","point","i","midPoint","clientX","clientY","quadraticCurveTo","lineTo","closePath","globalAlpha","draw","clearRect","width","height","updateElement","updatedElement","elementsCopy","window","innerWidth","innerHeight","onMouseDown","e","console","log","length","newEle","transparency","state","moveTo","element","prevState","onMouseMove","onMouseUp","type","strokeWidth","adjustElementCoordinates","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.96bbe9ae.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Swatch({ setToolType }) {\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div>\n            <button\n              title=\"Pencil\"\n              onClick={() => {\n                setToolType(\"pencil\");\n              }}\n            >\n              Pencil\n            </button>\n            <button\n              title=\"Line\"\n              onClick={() => {\n                setToolType(\"line\");\n              }}\n            >\n              Line\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Swatch from \"./components/swatch\";\nimport rough from \"roughjs/bundled/rough.esm\";\n\nconst gen = rough.generator();\nfunction createElement(id, x1, y1, x2, y2) {\n  const roughEle = gen.line(x1, y1, x2, y2);\n  return { id, x1, y1, x2, y2, roughEle };\n}\n\nconst midPointBtw = (p1, p2) => {\n  return {\n    x: p1.x + (p2.x - p1.x) / 2,\n    y: p1.y + (p2.y - p1.y) / 2,\n  };\n};\n\nexport const adjustElementCoordinates = (element) => {\n  const { type, x1, y1, x2, y2 } = element;\n  if (x1 < x2 || (x1 === x2 && y1 < y2)) {\n    return { x1, y1, x2, y2 };\n  } else {\n    return { x1: x2, y1: y2, x2: x1, y2: y1 };\n  }\n};\n\nfunction App() {\n  const [elements, setElements] = useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  const [points, setPoints] = useState([]);\n  const [path, setPath] = useState([]);\n\n  const [action, setAction] = useState(\"none\");\n  const [toolType, setToolType] = useState(\"pencil\");\n  const [selectedElement, setSelectedElement] = useState(null);\n\n  useEffect(() => {\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    context.lineCap = \"round\";\n    context.lineJoin = \"round\";\n\n    context.save();\n\n    const drawpath = () => {\n      path.forEach((stroke, index) => {\n        context.beginPath();\n\n        stroke.forEach((point, i) => {\n          var midPoint = midPointBtw(point.clientX, point.clientY);\n\n          context.quadraticCurveTo(\n            point.clientX,\n            point.clientY,\n            midPoint.x,\n            midPoint.y\n          );\n          context.lineTo(point.clientX, point.clientY);\n          context.stroke();\n        });\n        context.closePath();\n        context.save();\n      });\n    };\n\n    const roughCanvas = rough.canvas(canvas);\n\n    if (path !== undefined) drawpath();\n\n    elements.forEach(({ roughEle }) => {\n      context.globalAlpha = \"1\";\n      roughCanvas.draw(roughEle);\n    });\n\n    return () => {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    };\n  }, [elements, path]);\n\n  const updateElement = (index, x1, y1, x2, y2, toolType) => {\n    const updatedElement = createElement(index, x1, y1, x2, y2, toolType);\n    const elementsCopy = [...elements];\n    elementsCopy[index] = updatedElement;\n    setElements(elementsCopy);\n  };\n\n  const handleMouseDown = (e) => {\n    console.log(toolType);\n    const { clientX, clientY } = e;\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n\n    const id = elements.length;\n    if (toolType === \"pencil\") {\n      setAction(\"sketching\");\n      setIsDrawing(true);\n\n      const transparency = \"1.0\";\n      const newEle = {\n        clientX,\n        clientY,\n        transparency,\n      };\n      setPoints((state) => [...state, newEle]);\n\n      context.lineCap = 5;\n      context.moveTo(clientX, clientY);\n      context.beginPath();\n    } else {\n      setAction(\"drawing\");\n      const element = createElement(id, clientX, clientY, clientX, clientY);\n\n      setElements((prevState) => [...prevState, element]);\n      setSelectedElement(element);\n      console.log(elements);\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    const { clientX, clientY } = e;\n\n    if (action === \"sketching\") {\n      if (!isDrawing) return;\n\n      const transparency = points[points.length - 1].transparency;\n      const newEle = { clientX, clientY, transparency };\n\n      setPoints((state) => [...state, newEle]);\n      var midPoint = midPointBtw(clientX, clientY);\n      context.quadraticCurveTo(clientX, clientY, midPoint.x, midPoint.y);\n      context.lineTo(clientX, clientY);\n      context.stroke();\n    } else if (action === \"drawing\") {\n      const index = elements.length - 1;\n      const { x1, y1 } = elements[index];\n\n      updateElement(index, x1, y1, clientX, clientY, toolType);\n    }\n  };\n  const handleMouseUp = () => {\n    if (action === \"drawing\") {\n      const index = selectedElement.id;\n      const { id, type, strokeWidth } = elements[index];\n      const { x1, y1, x2, y2 } = adjustElementCoordinates(elements[index]);\n      updateElement(id, x1, y1, x2, y2, type, strokeWidth);\n    } else if (action === \"sketching\") {\n      const canvas = document.getElementById(\"canvas\");\n      const context = canvas.getContext(\"2d\");\n      context.closePath();\n      const element = points;\n      setPoints([]);\n      setPath((prevState) => [...prevState, element]); //tuple\n      setIsDrawing(false);\n    }\n    setAction(\"none\");\n  };\n  return (\n    <div>\n      <div>\n        <Swatch setToolType={setToolType} />\n      </div>\n      <canvas\n        id=\"canvas\"\n        className=\"App\"\n        width={window.innerWidth}\n        height={window.innerHeight}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        Canvas\n      </canvas>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}